/* tslint:disable */
/* eslint-disable */
/**
 * Portfolio Management API
 * A comprehensive API for managing investment portfolios, tracking assets, and analyzing portfolio performance. Supports multiple asset types including cash, stocks, bonds, cryptocurrencies, foreign currencies, and futures.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@portfoliomanagement.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Configuration } from '../configuration'
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios'
import globalAxios from 'axios'
// Some imports not used depending on template conditions
// @ts-ignore
import {
  DUMMY_BASE_URL,
  assertParamExists,
  setApiKeyToObject,
  setBasicAuthToObject,
  setBearerAuthToObject,
  setOAuthToObject,
  setSearchParams,
  serializeDataIfNeeded,
  toPathString,
  createRequestFunction,
} from '../common'
// @ts-ignore
import {
  BASE_PATH,
  COLLECTION_FORMATS,
  type RequestArgs,
  BaseAPI,
  RequiredError,
  operationServerMap,
} from '../base'
// @ts-ignore
import type { ApiMainPageSummaryGet200Response } from '../models'
// @ts-ignore
import type { ApiMainPageTotalAssetsHistoryGet200Response } from '../models'
/**
 * MainPageApi - axios parameter creator
 * @export
 */
export const MainPageApiAxiosParamCreator = function (
  configuration?: Configuration
) {
  return {
    /**
     *
     * @summary 获取资产汇总信息(总资产、总盈亏、当日盈亏)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainPageSummaryGet: async (
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      const localVarPath = `/api/main_page/summary`
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL)
      let baseOptions
      if (configuration) {
        baseOptions = configuration.baseOptions
      }

      const localVarRequestOptions = {
        method: 'GET',
        ...baseOptions,
        ...options,
      }
      const localVarHeaderParameter = {} as any
      const localVarQueryParameter = {} as any

      setSearchParams(localVarUrlObj, localVarQueryParameter)
      let headersFromBaseOptions =
        baseOptions && baseOptions.headers ? baseOptions.headers : {}
      localVarRequestOptions.headers = {
        ...localVarHeaderParameter,
        ...headersFromBaseOptions,
        ...options.headers,
      }

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      }
    },
    /**
     *
     * @summary 获取近10天的总资产变化数据
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainPageTotalAssetsHistoryGet: async (
      options: RawAxiosRequestConfig = {}
    ): Promise<RequestArgs> => {
      const localVarPath = `/api/main_page/totalAssetsHistory`
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL)
      let baseOptions
      if (configuration) {
        baseOptions = configuration.baseOptions
      }

      const localVarRequestOptions = {
        method: 'GET',
        ...baseOptions,
        ...options,
      }
      const localVarHeaderParameter = {} as any
      const localVarQueryParameter = {} as any

      setSearchParams(localVarUrlObj, localVarQueryParameter)
      let headersFromBaseOptions =
        baseOptions && baseOptions.headers ? baseOptions.headers : {}
      localVarRequestOptions.headers = {
        ...localVarHeaderParameter,
        ...headersFromBaseOptions,
        ...options.headers,
      }

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      }
    },
  }
}

/**
 * MainPageApi - functional programming interface
 * @export
 */
export const MainPageApiFp = function (configuration?: Configuration) {
  const localVarAxiosParamCreator = MainPageApiAxiosParamCreator(configuration)
  return {
    /**
     *
     * @summary 获取资产汇总信息(总资产、总盈亏、当日盈亏)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async apiMainPageSummaryGet(
      options?: RawAxiosRequestConfig
    ): Promise<
      (
        axios?: AxiosInstance,
        basePath?: string
      ) => AxiosPromise<ApiMainPageSummaryGet200Response>
    > {
      const localVarAxiosArgs =
        await localVarAxiosParamCreator.apiMainPageSummaryGet(options)
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0
      const localVarOperationServerBasePath =
        operationServerMap['MainPageApi.apiMainPageSummaryGet']?.[
          localVarOperationServerIndex
        ]?.url
      return (axios, basePath) =>
        createRequestFunction(
          localVarAxiosArgs,
          globalAxios,
          BASE_PATH,
          configuration
        )(axios, localVarOperationServerBasePath || basePath)
    },
    /**
     *
     * @summary 获取近10天的总资产变化数据
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async apiMainPageTotalAssetsHistoryGet(
      options?: RawAxiosRequestConfig
    ): Promise<
      (
        axios?: AxiosInstance,
        basePath?: string
      ) => AxiosPromise<ApiMainPageTotalAssetsHistoryGet200Response>
    > {
      const localVarAxiosArgs =
        await localVarAxiosParamCreator.apiMainPageTotalAssetsHistoryGet(
          options
        )
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0
      const localVarOperationServerBasePath =
        operationServerMap['MainPageApi.apiMainPageTotalAssetsHistoryGet']?.[
          localVarOperationServerIndex
        ]?.url
      return (axios, basePath) =>
        createRequestFunction(
          localVarAxiosArgs,
          globalAxios,
          BASE_PATH,
          configuration
        )(axios, localVarOperationServerBasePath || basePath)
    },
  }
}

/**
 * MainPageApi - factory interface
 * @export
 */
export const MainPageApiFactory = function (
  configuration?: Configuration,
  basePath?: string,
  axios?: AxiosInstance
) {
  const localVarFp = MainPageApiFp(configuration)
  return {
    /**
     *
     * @summary 获取资产汇总信息(总资产、总盈亏、当日盈亏)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainPageSummaryGet(
      options?: RawAxiosRequestConfig
    ): AxiosPromise<ApiMainPageSummaryGet200Response> {
      return localVarFp
        .apiMainPageSummaryGet(options)
        .then(request => request(axios, basePath))
    },
    /**
     *
     * @summary 获取近10天的总资产变化数据
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiMainPageTotalAssetsHistoryGet(
      options?: RawAxiosRequestConfig
    ): AxiosPromise<ApiMainPageTotalAssetsHistoryGet200Response> {
      return localVarFp
        .apiMainPageTotalAssetsHistoryGet(options)
        .then(request => request(axios, basePath))
    },
  }
}

/**
 * MainPageApi - interface
 * @export
 * @interface MainPageApi
 */
export interface MainPageApiInterface {
  /**
   *
   * @summary 获取资产汇总信息(总资产、总盈亏、当日盈亏)
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof MainPageApiInterface
   */
  apiMainPageSummaryGet(
    options?: RawAxiosRequestConfig
  ): AxiosPromise<ApiMainPageSummaryGet200Response>

  /**
   *
   * @summary 获取近10天的总资产变化数据
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof MainPageApiInterface
   */
  apiMainPageTotalAssetsHistoryGet(
    options?: RawAxiosRequestConfig
  ): AxiosPromise<ApiMainPageTotalAssetsHistoryGet200Response>
}

/**
 * MainPageApi - object-oriented interface
 * @export
 * @class MainPageApi
 * @extends {BaseAPI}
 */
export class MainPageApi extends BaseAPI implements MainPageApiInterface {
  /**
   *
   * @summary 获取资产汇总信息(总资产、总盈亏、当日盈亏)
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof MainPageApi
   */
  public apiMainPageSummaryGet(options?: RawAxiosRequestConfig) {
    return MainPageApiFp(this.configuration)
      .apiMainPageSummaryGet(options)
      .then(request => request(this.axios, this.basePath))
  }

  /**
   *
   * @summary 获取近10天的总资产变化数据
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof MainPageApi
   */
  public apiMainPageTotalAssetsHistoryGet(options?: RawAxiosRequestConfig) {
    return MainPageApiFp(this.configuration)
      .apiMainPageTotalAssetsHistoryGet(options)
      .then(request => request(this.axios, this.basePath))
  }
}
